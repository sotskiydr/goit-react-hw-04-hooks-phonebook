{"version":3,"sources":["components/ContactForm/ContactForm.module.scss","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactsList.js","App.js","index.js","components/ContactList/ContactList.module.scss","components/Filter/Filter.module.scss"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","className","styles","this","label","input","type","placeholder","pattern","title","required","onChange","submit","React","Component","Filter","filter","ContactsList","renderContacts","deleteContact","list","map","el","item","span","btn","id","onClick","App","contacts","formSubmitData","newItem","nanoid","some","alert","prevStates","changeFilter","toLowerCaseFilter","toLowerCase","includes","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad008a46.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact-form\":\"ContactForm_contact-form__2H_yu\",\"label\":\"ContactForm_label__3KgVy\",\"input\":\"ContactForm_input__3emgF\",\"submit\":\"ContactForm_submit__2xTHf\"};","import React from 'react';\nimport styles from './ContactForm.module.scss';\n\nclass ContactForm extends React.Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit({\n      name: this.state.name,\n      number: this.state.number,\n    });\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form className={styles['contact-form']} onSubmit={this.handleSubmit}>\n        <label className={styles.label}>\n          Name\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Liubov Murarova\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label className={styles.label}>\n          Number\n          <input\n            className={styles.input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            placeholder=\"099-999-99-99\"\n            required\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button className={styles.submit} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.scss';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div className={styles.filter}>\n      <label className={styles.label}>\n        Find contacts by name\n        <input\n          className={styles.input}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.scss';\n\nconst ContactsList = ({ renderContacts, deleteContact }) => {\n  return (\n    <ul className={styles.list}>\n      {renderContacts.map(el => {\n        return (\n          <li className={styles.item} key={el.id}>\n            <span className={styles.span}>\n              {el.name}: {el.number}\n            </span>\n            <button\n              className={styles.btn}\n              type=\"button\"\n              id={el.id}\n              onClick={() => {\n                deleteContact(el.id);\n              }}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nContactsList.propTypes = {\n  renderContacts: PropTypes.array.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import React from 'react';\nimport { nanoid } from 'nanoid';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactsList from './components/ContactList/ContactsList';\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Vova Putin', number: '459-12-56' },\n      { id: 'id-2', name: 'Vitya Poroshenko', number: '443-89-12' },\n      { id: 'id-3', name: 'Vova Lenin', number: '645-17-79' },\n      { id: 'id-4', name: 'Joseph Stalin', number: '227-91-26' },\n    ],\n    filter: '',\n    name: '',\n    number: '',\n  };\n\n  formSubmitData = ({ name, number }) => {\n    const newItem = { id: nanoid(), name: name, number: number };\n    let isUnique = this.state.contacts.some(el => el.name === name);\n    if (!isUnique) {\n      this.setState(prevStates => ({\n        contacts: [...prevStates.contacts, newItem],\n      }));\n    } else {\n      alert(`${name} is already in contacts`);\n    }\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  renderContacts = () => {\n    const { filter, contacts } = this.state;\n    const toLowerCaseFilter = filter.toLowerCase();\n    return contacts.filter(el =>\n      el.name.toLowerCase().includes(toLowerCaseFilter),\n    );\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(el => el.id !== id),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    return (\n      <main className=\"main\">\n        <h1 className=\"title\">Phonebook</h1>\n        <ContactForm onSubmit={this.formSubmitData} />\n        <h2 className=\"title\">Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactsList\n          renderContacts={this.renderContacts()}\n          deleteContact={this.deleteContact}\n        />\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3wSXY\",\"item\":\"ContactList_item__3lf8n\",\"btn\":\"ContactList_btn__LjK5L\",\"span\":\"ContactList_span__2n2ga\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2pNgv\",\"input\":\"Filter_input__YmgBH\"};"],"sourceRoot":""}